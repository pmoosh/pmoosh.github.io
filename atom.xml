<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Yaba - Yet another blog attempt]]></title>
  <link href="http://pmoosh.github.io/atom.xml" rel="self"/>
  <link href="http://pmoosh.github.io/"/>
  <updated>2014-09-08T17:32:22-07:00</updated>
  <id>http://pmoosh.github.io/</id>
  <author>
    <name><![CDATA[Peter Mooshammer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Django Behind an Amazon Load Balancer]]></title>
    <link href="http://pmoosh.github.io/blog/2014/09/08/django-behind-an-amazon-load-balancer/"/>
    <updated>2014-09-08T00:00:00-07:00</updated>
    <id>http://pmoosh.github.io/blog/2014/09/08/django-behind-an-amazon-load-balancer</id>
    <content type="html"><![CDATA[<p>We had to configure django behind a AWS load balancer and that would mean that whenever the IP of the load balancer changes we would to change the ALLOWED_HOSTS
in the settings section. Note: This is for the ELB health check. Some on the web suggest to circumvent the ALLOWED_HOSTS by simple allowing any host,
which we didn&rsquo;t want to do. So here is the solution
I found on <a href="http://dryan.me/articles/elb-django-allowed-hosts/">Daniel Ryan&rsquo;s</a> site:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Hosts/domain names that are valid for this site; required if DEBUG is False
</span><span class='line'># See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
</span><span class='line'>ALLOWED_HOSTS = [
</span><span class='line'>    'WHATEVER YOU NEED'
</span><span class='line'>]
</span><span class='line'> 
</span><span class='line'>import requests
</span><span class='line'>EC2_PRIVATE_IP  =   None
</span><span class='line'>try:
</span><span class='line'>    EC2_PRIVATE_IP  =   requests.get('http://169.254.169.254/latest/meta-data/local-ipv4', timeout = 0.01).text
</span><span class='line'>except requests.exceptions.RequestException:
</span><span class='line'>    pass
</span><span class='line'> 
</span><span class='line'>if EC2_PRIVATE_IP:
</span><span class='line'>    ALLOWED_HOSTS.append(EC2_PRIVATE_IP)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So I Don't Forget Again]]></title>
    <link href="http://pmoosh.github.io/blog/2014/08/19/so-i-dont-forget-again/"/>
    <updated>2014-08-19T23:30:56-07:00</updated>
    <id>http://pmoosh.github.io/blog/2014/08/19/so-i-dont-forget-again</id>
    <content type="html"><![CDATA[<p>This is one of the blog posts that is mostly for I am still digging into chef and all its details. There are many blogs out there, however chef develops so rapidly that many of the blogs are outdated. I am sure this will also happen to this blog entry&hellip;.</p>

<p>Today I had to work with encrypted data bags. They are easy to create with knife and a chef server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife data bag from file DATA_BAG_NAME /path/to/DATA_BAG_ITEM.json --secret-file /path/to/encrypted_data_bag_secret</span></code></pre></td></tr></table></div></figure>


<p>But since I needed them locally on my system - I am using chef solo with vagrant - I wanted to download them again. So here is how I got it done. There might other better ways&hellip;.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife data bag show DATA_BAG_NAME --format json DATA_BAG_ITEM &gt; /path/to_encrypted/DATA_BAG_ITEM.json</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OSX - Pbcopy and Pbpaste]]></title>
    <link href="http://pmoosh.github.io/blog/2014/08/18/mac-osx-pbcopy-and-pbpaste/"/>
    <updated>2014-08-18T18:06:45-07:00</updated>
    <id>http://pmoosh.github.io/blog/2014/08/18/mac-osx-pbcopy-and-pbpaste</id>
    <content type="html"><![CDATA[<p>One of the small but helpful tools that Mac OS X provides are pbcopy and pbpaste.
They provide copying and pasting to the pasteboard (the Clipboard) from the command line.</p>

<p>So you can pipe your massive json file onto the pastboard with a simple command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat huge.json | pbcopy</span></code></pre></td></tr></table></div></figure>


<p>Now you have it in the pasteboard (clipboard) and paste it in your favorite json lint site - like <a href="http://jsonlint.com">JsonLint</a> or <a href="http://www.freeformatter.com/json-validator.html">FREEFORMATTER.COM</a>. Another site I was just recently introduced to is the <a href="http://www.bodurov.com/JsonFormatter/">Collapsible JSON Formatter</a>.</p>

<p>One way I use pbpaste is when copying keys created on websites. After I copied the key to the pasteboard I will run the command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pbpaste &gt; keyfile.pem</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it.</p>
]]></content>
  </entry>
  
</feed>
